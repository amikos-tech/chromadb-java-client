name: release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          cache: maven

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0

      - name: start minikube
        id: minikube
        uses: medyagh/setup-minikube@latest
        with:
          kubernetes-version: 1.27.3
      - name: Add helm repo
        run: |
          set -e
          helm repo add chromadb https://amikos-tech.github.io/chromadb-chart/
          helm repo update
      - name: Install chromadb
        run: |
          set -e
          helm install chromadb chromadb/chromadb
      - name: Wait for deployment to be ready
        id: wait-and-set
        run: |
          set -e
          kubectl wait \
          --for=condition=ready pod \
          --selector=app.kubernetes.io/name=chromadb \
          --timeout=120s
          echo "chroma-url=$(minikube service chromadb --url)" >> $GITHUB_OUTPUT
      - name: Hearthbeat
        run: |
          set -e
          kubectl get svc -A
          curl $(minikube service chromadb --url)/api/v1
      - name: Build with Maven
        run: mvn clean package
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          CHROMA_URL: ${{steps.wait-and-set.outputs.chroma-url}}
#      - name: Publish package
#        run: mvn --batch-mode deploy
#        env:
#          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
      - id: install-secret-key
        name: Install gpg secret key
        run: |
          # Install gpg secret key
          cat <(echo -e "${{ secrets.AMIKOS_OSS_GPG_SECRET_KEY }}") | gpg --batch --import
          # Verify gpg secret key
          gpg --list-secret-keys --keyid-format LONG
      - name: Publish package
        run: |
          mvn \
                --no-transfer-progress \
                --batch-mode \
                -Dgpg.passphrase=${GPG_PASSPHRASE} \
                -DskipTests \
                clean deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_PASSPHRASE: ${{ secrets.AMIKOS_OSS_GPG_SECRET_KEY_PASSWORD }}
